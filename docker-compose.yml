version: '3.7'

networks:
  overlay-net:
    external: true
    driver: overlay

services:

  prod:
    image: iudx/rs-depl:latest
    environment:
      - RS_URL=https://rs.iudx.org.in
      - LOG_LEVEL=INFO
      - RS_JAVA_OPTS=-Xmx4096m
    volumes:
      - ./configs/config-depl.json:/usr/share/app/configs/config.json
      - ./configs/keystore.jks:/usr/share/app/configs/keystore.jks
    ports:
      - "443:8443"
      - "9000:9000"
    restart: on-failure
    networks: 
      - overlay-net
    logging:
         driver: "json-file"
         options:
             max-file: "5"
             max-size: "100m"
    command: bash -c "exec java $$RS_JAVA_OPTS  -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$(hostname) -c configs/config.json"


  dev:
    image: iudx/rs-dev:latest
    environment:
      - RS_URL=https://rs.iudx.org.in
      - LOG_LEVEL=DEBUG
      - RS_JAVA_OPTS=-Xmx1024m
    volumes:
      - ./configs/config-dev.json:/usr/share/app/configs/config.json
      - ./configs/keystore.jks:/usr/share/app/configs/keystore.jks
    ports:
      - "8443:8443"
      - "9000:9000"
    restart: on-failure
    networks: 
      - overlay-net
    logging:
         driver: "json-file"
         options:
             max-file: "5"
             max-size: "100m"
    command: bash -c "exec java $$RS_JAVA_OPTS  -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$(hostname) -c configs/config.json"

  test:
    image: ghcr.io/karun-singh/resource-server:test
    environment:
      - RS_URL=https://rs.iudx.org.in
      - LOG_LEVEL=DEBUG
      - WORKSPACE
    volumes:
      - ./src/:/usr/share/app/src
      - /home/ubuntu/configs/rs-config-test.json:/usr/share/app/configs/config-test.json
      - /home/ubuntu/configs/keystore.jks:/usr/share/app/configs/keystore.jks
      - ./docker/runTests.sh:/usr/share/app/docker/runTests.sh
      - ${WORKSPACE}:/tmp/test
    command: bash -c "docker/runTests.sh && cp -r target /tmp/test"
    networks: 
      - overlay-net
    logging:
         driver: "json-file"
         options:
             max-file: "5"
             max-size: "100m"

  zookeeper:
    image: zookeeper:latest
    expose: 
      - "2181"
    networks:
      - overlay-net
